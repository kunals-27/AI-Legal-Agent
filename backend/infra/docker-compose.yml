services:
  milvus-etcd:
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_RETENTION=1
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=10000
    command: ["etcd","--name","milvus-etcd","-advertise-client-urls","http://milvus-etcd:2379","-listen-client-urls","http://0.0.0.0:2379","-listen-peer-urls","http://0.0.0.0:2380","-initial-advertise-peer-urls","http://milvus-etcd:2380","-initial-cluster","milvus-etcd=http://milvus-etcd:2380","-initial-cluster-state","new","-initial-cluster-token","etcd-cluster"]
    ports:
      - "2379:2379"
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus-minio:
    image: minio/minio:RELEASE.2024-05-10T01-41-38Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    command: ["minio","server","/data"]
    ports:
      - "9000:9000"
      - "9001:9001"

  milvus:
    image: milvusdb/milvus:v2.4.4
    depends_on:
      - milvus-etcd
      - milvus-minio
    environment:
      ETCD_ENDPOINTS: milvus-etcd:2379
      MINIO_ADDRESS: milvus-minio:9000
    ports:
      - "19530:19530"
      - "9091:9091"
    command: ["milvus", "run", "standalone"]

  backend:
    build: ..
    command: python main.py
    env_file:
      - ../.env
    environment:
      # Use the host's Ollama instance from inside the container
      OLLAMA_HOST: http://host.docker.internal:11434
      # Connect to Milvus service by name inside the Docker network
      MILVUS_HOST: milvus
      MILVUS_PORT: "19530"
      MILVUS_COLLECTION: legal_chunks
    volumes:
      - ..:/app
    working_dir: /app
    ports:
      - "8000:8000"
    depends_on:
      - milvus

